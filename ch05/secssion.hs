{-# OPTIONS -Wall -Werror #-}

-- セクション（という名のセクション）

{-
中置関数（+ - * / とか）に対しても、セクションという機能を使って部分適用することができる
中置関数をセクションするには片側だけに値をおいてかっこで囲むだけ
-}
-- 10で割る関数
divideByTen :: (Floating a) => a -> a
divideByTen = (/10)

{- GHCiでするこれと同じ
ghci> (/10) 200
20.0
-}

isUpperAlphanum :: Char -> Bool
isUpperAlphanum = (`elem` ['A'..'Z'])

{-
セクションで気をつけるべきは、- (負の数、マイナス)演算子と同時に使う時
セクションの定義から考えると、(-4)は上の(/10)などと同じように、4をひく関数となるはず
しかし、(-4)は利便性のため、ただのマイナス4を意味することになっている

なので、引数から4を引く関数をつくりたいときには、subtract関数を(subtract 4)のように部分適用する
-}


-- 関数を表示する
{-
部分適用した関数を、ターミナルに表示しようとすると....

ghci> multThree 3 4
<interactive>:1:0:
    No instance for (Show (a -> a))
    ....

こんな感じで注意をしてくれる

これは部分適用し、引数を1つ取り3と4を掛ける関数を作ったけど、どうやって画面に表示したら良いのかわからないと言っている。
関数はShow型クラスのインスタンスではないので、表現する文字列が得られないからである


-}
